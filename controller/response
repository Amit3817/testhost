const axios=require("axios")

const result=async (req,res,next)=>{
    try{
    const institute=req.institute
    // var concatenatedString;
    // function mapArrays(arr1, arr2) {
    //   if (!arr1 || !arr2 || arr1.length !== arr2.length) {
    //     throw new Error("Arrays must be defined and have the same length");
    //   }
      
    //   const result = arr1.map((program, index) => program + ` in ` + arr2[index]);
    
    //   return result;
    // }
    //   const mappedArray = mapArrays(institute.programs, institute.degreeDetails);
    
    //   if (mappedArray.length > 1) {
    //     concatenatedString = `${mappedArray.slice(0, -1).join(', ')} , ${mappedArray.slice(-1)}`;
    //   } else if (mappedArray.length === 1) {
    //     concatenatedString = mappedArray[0];
    //   } else {
    //     concatenatedString = "No elements in the arrays";
    //   }
    

    // const processQuestion=`give me process approval process for estblashing ${institute.atype} institute for ${concatenatedString}, the type of institution is ${institute.itype}`
    // const requirementQuestion=`give me requirements for approval process for estblashing ${institute.atype} institute for ${concatenatedString}, the type of institution is ${institute.itype}`
    // const eligibilityQuestion=`give me eligibility required for approval process for estblashing ${institute.atype} institute for ${concatenatedString}, the type of institution is ${institute.itype}`
    // const normsQuestion=`give me norms and notices required for approval process for estblashing ${institute.atype} institute for ${concatenatedString}, the type of institution is ${institute.itype}`

    // const process=await axios.post(
    //     process.env.socketq,
    //     {
    //       question:processQuestion
    //     },
    //     {
    //       headers: {
    //         'Content-Type': 'application/json',
    //       },
    //     }
    //   );
    //   const processContent=process.data.msg.chat_history[process.data.msg.chat_history.length - 1].content
    //   const processIndex=processContent.indexOf('\n');
    //   const processAnswer=processContent.substring(processIndex + 2);

      
    // const requirements=await axios.post(
    //     process.env.socketq,
    //     {
    //       question:requirementQuestion
    //     },
    //     {
    //       headers: {
    //         'Content-Type': 'application/json',
    //       },
    //     }
    //   );
    //   const requirementContent=requirements.data.msg.chat_history[requirements.data.msg.chat_history.length - 1].content
    //   const requirementIndex=requirementContent.indexOf('\n');
    //   const requirementAnswer=requirementContent.substring(requirementIndex + 2);

    // const eligibility=await axios.post(
    //     process.env.socketq,
    //     {
    //       question:eligibilityQuestion
    //     },
    //     {
    //       headers: {
    //         'Content-Type': 'application/json',
    //       },
    //     }
    //   );

    //   const eligibilityContent=eligibility.data.msg.chat_history[chat_history.length - 1].content
    //   const eligibilityIndex=eligibilityContent.indexOf('\n');
    //   const eligibilityAnswer=eligibility.substring(eligibilityIndex + 2);

    // const norms=await axios.post(
    //     process.env.socketq,
    //     {
    //       question:normsQuestion
    //     },
    //     {
    //       headers: {
    //         'Content-Type': 'application/json',
    //       },
    //     }
    //   );
    //   const normsContent=norms.data.msg.chat_history[norms.data.msg.chat_history.length - 1].content
    //   const normsIndex=normsContent.indexOf('\n');
    //   const normsAnswer=normsContent.substring(normsIndex + 2);
      return res.json({success:true,institute:institute,token:req.user.token});

}
catch(error){
  console.error("Error processing question:", error.message);
  next(error);
}
}
module.exports={result}
